<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="MemberMapper">
  	<insert id="memberJoin" parameterType="MemberDTO">
  		insert into 
  		member values(#{id}, #{pw}, #{name}, #{age}, #{email}, #{phone}, #{addr}, #{birth}, #{job}, 0, #{fname}, #{oname}, #{position}, #{sns}, 0, #{teamName})
  	</insert>
  	
  	<insert id="APIUpdate" parameterType="MemberDTO">
  		insert into member (id, pw, name) values (#{id}, #{pw}, #{name})
  	</insert>

  
  	<select id="memberLogin" parameterType="MemberDTO" resultType="MemberDTO">
  		select * from member where id=#{id} and pw=#{pw}
  	</select>
  	
  	
 	<update id="memberUpdate" parameterType="MemberDTO">
 		update member set pw=#{pw}, name=#{name}, age=#{age}, email=#{email}, phone=#{phone}, addr=#{addr}, birth=#{birth}, job=#{job}, point=#{point}, fname=#{fname}, oname=#{oname}, position=#{position}, sns=#{sns}, state=null, teamname=#{teamName} where id=#{id}
 	</update>
 	
 	
 	<delete id="memberDelete" parameterType="MemberDTO">
 		delete member where id=#{id}
 	</delete>
 	<select id="memberView" parameterType="String" resultType="MemberDTO">
 	select * from member where id=#{id}
 	</select>
 	

 	<select id="memberList" parameterType="ListData" resultType="MemberDTO">
 	select * from (select rownum R,M.* from (select * from member 
 	<if test="search == 'singer'">
  	where job LIKE '%'||#{search}||'%'
  	</if>
  	<if test="search == 'member'">
  	where job LIKE '%'||#{search}||'%'
  	</if>
  	) M) where R between #{startRow} and #{lastRow} order by R desc
 	</select>
 	
 	<select id="singerList" parameterType="ListData" resultType="MemberDTO">
 	select * from (select rownum R,M.* from (select * from member 
  	where job = 'singer' and state='0'
  	) M) where R between #{startRow} and #{lastRow} order by R desc
 	</select>
 	
 	
 	<select id="totalCount" resultType="int" parameterType="ListData">
  	select nvl(count(id),0) from member
  	<if test="search == 'singer'">
  	where job LIKE '%'||#{search}||'%'
  	</if>
  	<if test="search == 'member'">
  	where job LIKE '%'||#{search}||'%'
  	</if>
  	</select>
  	
  	<update id="singerUpdate" parameterType="MemberDTO">
  	update member set state='승인' where id=#{id}
  	</update>

 	<select id="memberIdCheck" parameterType="String" resultType="MemberDTO">
 		select id from member where id=#{id}
 	</select>
 	
 	<select id="memberID" parameterType="String" resultType="String">
		select id from member where email = #{email}
 	</select>

 	
 	<select id="memberPW" parameterType="String" resultType="String">
 		select pw from member where email = #{email}
 	</select>
 	
  </mapper>
  
  
  
  
  
  
  
  
  
  
  
  
  
  